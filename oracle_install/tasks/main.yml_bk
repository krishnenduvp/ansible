---
- name: Gather package facts
  package_facts:

- name: Install missing packages
  yum:
    name: "{{ item }}"
    state: present
  loop: "{{ packages_list }}"
  when: item not in ansible_facts.packages
  ignore_errors: yes
  register: install_result

- name: Set a fact for failed packages
  set_fact:
    failed_packages: "{{ failed_packages | default([]) + [item.item] }}"
  loop: "{{ install_result.results }}"
  when: "'failed' in item and item.failed"

- name: Print message for failed packages
  debug:
    msg: "The following packages failed to install: {{ failed_packages }}"
  when: failed_packages is defined

- name: Ensure groups exist
  group:
    name: "{{ item.name }}"
    gid: "{{ item.gid }}"
    state: present
  loop: "{{ groups_list }}"

- name: Ensure oracle user exists and is added to all specified groups
  user:
    name: oracle
    uid: 54321
    group: oinstall
    groups: "{{ groups_list | map(attribute='name') | join(',') }}"
    append: yes
    state: present  


- name: Ensure the home directory exists for oracle
  file:
    path: /home/oracle
    state: directory
    owner: oracle
    group: oinstall
    mode: '0755'

- name: Copy configuration files to oracle user's home directory
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: oracle
    group: oinstall
    mode: '0644'
  vars:
    oracle_hostname: "{{ ansible_fqdn }}"
    oracle_sid: "{{ oracle_sid }}"
  with_items:
    - { src: 'bash_profile.j2', dest: '/home/oracle/.bash_profile' }
    - { src: 'grid_env.j2', dest: '/home/oracle/grid_env' }
    - { src: 'db_env.j2', dest: '/home/oracle/db_env' }

- name: Create directories for Oracle
  file:
    path: "{{ item }}"
    state: directory
    mode: '0775'  # Set permissions
  loop:
    - /u01/app/19.0.0/grid
    - /u01/app/oracle/product/19.0.0/dbhome_1

- name: Change ownership and set permissions for /u01
  file:
    path: /u01
    owner: oracle
    group: oinstall
    mode: '0775'
    recurse: yes

- name: Check current status of Transparent Huge Pages
  command: cat /sys/kernel/mm/transparent_hugepage/enabled
  register: thp_status

- name: Print current THP status
  debug:
    msg: "Current THP status: {{ thp_status.stdout }}"

- name: Disable Transparent Huge Pages temporarily
  command: echo never > /sys/kernel/mm/transparent_hugepage/enabled
  when: "'[never]' not in thp_status.stdout"

- name: Disable Transparent Huge Pages permanently via grub
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    line: 'GRUB_CMDLINE_LINUX="transparent_hugepage=never"'
  notify: Update GRUB


handlers:
- name: Update GRUB
  command: grub2-mkconfig -o /boot/grub2/grub.cfg
  when: ansible_os_family == "RedHat"
